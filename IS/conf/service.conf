encoding=UTF-8

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java
#  Specify a specific java binary:
#set.JAVA_HOME=C:\Program Files (x86)\Java\jre7
set.JAVA_HOME=C:\Program Files\Java\jre7
wrapper.java.command=%JAVA_HOME%\bin\java

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=ua.com.AACC.is.run.ISservice


# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=lib\wrapper.jar
wrapper.java.classpath.2=IS.jar
wrapper.java.classpath.3=lib\derby.jar
wrapper.java.classpath.4=lib\derbynet.jar
wrapper.java.classpath.5=lib\derbytools.jar
wrapper.java.classpath.6=lib\jetty-client-8.1.4.v20120524.jar
wrapper.java.classpath.7=lib\jetty-continuation-8.1.4.v20120524.jar
wrapper.java.classpath.8=lib\jetty-http-8.1.4.v20120524.jar
wrapper.java.classpath.9=lib\jetty-io-8.1.4.v20120524.jar
wrapper.java.classpath.10=lib\jetty-security-8.1.4.v20120524.jar
wrapper.java.classpath.11=lib\jetty-server-8.1.4.v20120524.jar
wrapper.java.classpath.12=lib\jetty-servlet-8.1.4.v20120524.jar
wrapper.java.classpath.13=lib\jetty-servlets-8.1.4.v20120524.jar
wrapper.java.classpath.14=lib\jetty-util-8.1.4.v20120524.jar
wrapper.java.classpath.15=lib\logback-classic-1.0.7.jar
wrapper.java.classpath.16=lib\logback-core-1.0.7.jar
wrapper.java.classpath.17=lib\servlet-api-3.0.jar
wrapper.java.classpath.18=lib\slf4j-api-1.7.0.jar

wrapper.java.classpath.19=lib\ISconfig.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=FALSE
#TRUE

# Java Additional Parameters
wrapper.java.additional.1=-Dlogback.configurationFile=conf\logback.xml
wrapper.java.additional.2=-XX:+UseConcMarkSweepGC
wrapper.java.additional.3=-XX:+UseParNewGC

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=200

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=200

# Application parameters.  Add parameters as needed starting from 1
#wrapper.app.parameter.1=ua.com.AACC.CCT.XXXX

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
# wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs\service.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=WARN

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=20m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Do not start if the pid file already exists.
wrapper.pidfile.strict=TRUE

# Title to use when running as a console
wrapper.console.title=Integration Server for GT.CRM using AACC CCT SOA. Developer: Artem Murashov

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Simple match)
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1000=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1000=TRUE
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.attach_log=TRUE
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=IS_CCT

# Display name of the service
wrapper.displayname=Integration Server AACC CCT SOA <-> GT.CRM by Artem Murashov

# Description of the service
wrapper.description=Integration Server for GT.CRM using AACC CCT SOA. Developer: Artem Murashov

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false
