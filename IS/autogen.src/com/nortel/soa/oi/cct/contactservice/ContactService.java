package com.nortel.soa.oi.cct.contactservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2014-01-31T11:02:44.328+03:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://www.nortel.com/soa/oi/cct/ContactService", name = "ContactService")
@XmlSeeAlso({com.nortel.soa.oi.cct.types.contactservice.ObjectFactory.class, com.nortel.soa.oi.cct.faults.ObjectFactory.class, com.nortel.soa.oi.cct.types.ObjectFactory.class, org.xmlsoap.schemas.ws._2003._03.addressing.ObjectFactory.class, org.oasis_open.docs.wsrf._2004._06.wsrf_ws_basefaults_1_2_draft_01.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface ContactService {

    @WebResult(name = "GetIntrinsicsResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetIntrinsics", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetIntrinsics")
    public com.nortel.soa.oi.cct.types.contactservice.GetIntrinsicsResponse getIntrinsics(
        @WebParam(partName = "parameters", name = "GetIntrinsicsRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetIntrinsicsException, SessionNotCreatedException;

    @WebResult(name = "GiveTreatmentResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GiveTreatment", action = "http://www.nortel.com/soa/oi/cct/ContactService/GiveTreatmentRequest")
    public com.nortel.soa.oi.cct.types.contactservice.TreatmentConnectionResponse giveTreatment(
        @WebParam(partName = "parameters", name = "GiveTreatmentRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.GiveTreatmentRequest parameters
    ) throws GiveTreatmentException, SessionNotCreatedException;

    @WebResult(name = "GetContactTypesResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetContactTypes", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetContactTypes")
    public com.nortel.soa.oi.cct.types.contactservice.GetContactTypesResponse getContactTypes(
        @WebParam(partName = "parameters", name = "GetContactTypesRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetContactTypesException, SessionNotCreatedException;

    @WebResult(name = "BargeInResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "BargeIn", action = "http://www.nortel.com/soa/oi/cct/ContactService/BargeIn")
    public com.nortel.soa.oi.cct.types.contactservice.ConnectionResponse bargeIn(
        @WebParam(partName = "parameters", name = "BargeInRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.BargeInRequest parameters
    ) throws SessionNotCreatedException, BargeInException;

    @WebResult(name = "GetCalledAddressResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetCalledAddress", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetCalledAddress")
    public com.nortel.soa.oi.cct.types.contactservice.AddressResponse getCalledAddress(
        @WebParam(partName = "parameters", name = "GetCalledAddressRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetCalledAddressException, SessionNotCreatedException;

    @WebResult(name = "ObserveResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "Observe", action = "http://www.nortel.com/soa/oi/cct/ContactService/Observe")
    public com.nortel.soa.oi.cct.types.contactservice.ConnectionResponse observe(
        @WebParam(partName = "request", name = "ObserveRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ObserveRequest request
    ) throws ObserveException, SessionNotCreatedException;

    @WebResult(name = "AddPartyResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "AddParty", action = "http://www.nortel.com/soa/oi/cct/ContactService/AddParty")
    public com.nortel.soa.oi.cct.types.contactservice.ConnectionResponse addParty(
        @WebParam(partName = "parameters", name = "AddPartyRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.AddPartyRequest parameters
    ) throws AddPartyException, SessionNotCreatedException;

    @WebResult(name = "GetInstantMessagesResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetInstantMessages", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetInstantMessages")
    public com.nortel.soa.oi.cct.types.contactservice.GetInstantMessagesResponse getInstantMessages(
        @WebParam(partName = "parameters", name = "GetInstantMessagesRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetInstantMessagesException, SessionNotCreatedException;

    @WebResult(name = "GetCapabilitiesResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetCapabilities", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetCapabilities")
    public com.nortel.soa.oi.cct.types.contactservice.GetContactCapabilitiesResponse getCapabilities(
        @WebParam(partName = "parameters", name = "GetCapabilitiesRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetCapabilitiesException, SessionNotCreatedException;

    @WebMethod(operationName = "SetAttachedData", action = "http://www.nortel.com/soa/oi/cct/ContactService/SetAttachedData")
    public void setAttachedData(
        @WebParam(partName = "parameters", name = "SetAttachedDataRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactAttachedDataRequest parameters
    ) throws SetAttachedDataException, SessionNotCreatedException;

    @WebResult(name = "GetUUIResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetUUI", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetUUI")
    public com.nortel.soa.oi.cct.types.contactservice.GetUUIResponse getUUI(
        @WebParam(partName = "parameters", name = "GetUUIRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws SessionNotCreatedException, GetUUIException;

    @WebMethod(operationName = "Drop", action = "http://www.nortel.com/soa/oi/cct/ContactService/Drop")
    public void drop(
        @WebParam(partName = "request", name = "DropRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest request
    ) throws DropException, SessionNotCreatedException;

    @WebResult(name = "GetConnectionsResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetConnections", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetConnections")
    public com.nortel.soa.oi.cct.types.contactservice.GetConnectionsResponse getConnections(
        @WebParam(partName = "parameters", name = "GetConnectionsRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetConnectionsException, SessionNotCreatedException;

    @WebMethod(operationName = "SetInstantMessages", action = "http://www.nortel.com/soa/oi/cct/ContactService/SetInstantMessages")
    public void setInstantMessages(
        @WebParam(partName = "parameters", name = "SetInstantMessagesRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.SetInstantMessagesRequest parameters
    ) throws SessionNotCreatedException, SetInstantMessagesException;

    @WebResult(name = "GetConnectionResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetConnection", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetConnection")
    public com.nortel.soa.oi.cct.types.contactservice.ConnectionResponse getConnection(
        @WebParam(partName = "parameters", name = "GetConnectionRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactAddressRequest parameters
    ) throws GetConnectionException, SessionNotCreatedException;

    @WebResult(name = "GetOriginalDestinationAddressResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetOriginalDestinationAddress", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetOriginalDestinationAddress")
    public com.nortel.soa.oi.cct.types.contactservice.AddressResponse getOriginalDestinationAddress(
        @WebParam(partName = "parameters", name = "GetOriginalDestinationAddressRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetOriginalDestinationAddressException, SessionNotCreatedException;

    @WebResult(name = "GetCallingTerminalResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetCallingTerminal", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetCallingTerminal")
    public com.nortel.soa.oi.cct.types.contactservice.TerminalResponse getCallingTerminal(
        @WebParam(partName = "parameters", name = "GetCallingTerminalRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetCallingTerminalException, SessionNotCreatedException;

    @WebResult(name = "GetCallingAddressResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetCallingAddress", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetCallingAddress")
    public com.nortel.soa.oi.cct.types.contactservice.AddressResponse getCallingAddress(
        @WebParam(partName = "parameters", name = "GetCallingAddressRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws SessionNotCreatedException, GetCallingAddressException;

    @WebResult(name = "GetAttachedXMLDataResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetAttachedXMLData", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetAttachedXMLData")
    public com.nortel.soa.oi.cct.types.contactservice.GetAttachedXMLDataResponse getAttachedXMLData(
        @WebParam(partName = "parameters", name = "GetAttachedXMLDataRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws SessionNotCreatedException, GetAttachedXMLDataException;

    @WebResult(name = "GetAttachedDataResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetAttachedData", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetAttachedData")
    public com.nortel.soa.oi.cct.types.contactservice.GetAttachedDataResponse getAttachedData(
        @WebParam(partName = "parameters", name = "GetAttachedDataRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetAttachedDataException, SessionNotCreatedException;

    @WebResult(name = "GetVersionResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetVersion", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetVersion")
    public com.nortel.soa.oi.cct.types.GetVersionResponse getVersion(
        @WebParam(partName = "parameters", name = "GetVersionRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.GetVersionRequest parameters
    ) throws GetVersionException, SessionNotCreatedException;

    @WebMethod(operationName = "SetUUI", action = "http://www.nortel.com/soa/oi/cct/ContactService/SetUUI")
    public void setUUI(
        @WebParam(partName = "parameters", name = "SetUUIRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.SetUUIRequest parameters
    ) throws SetUUIException, SessionNotCreatedException;

    @WebResult(name = "WhisperResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "Whisper", action = "http://www.nortel.com/soa/oi/cct/ContactService/Whisper")
    public com.nortel.soa.oi.cct.types.contactservice.ConnectionResponse whisper(
        @WebParam(partName = "parameters", name = "WhisperRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.WhisperRequest parameters
    ) throws WhisperException, SessionNotCreatedException;

    @WebMethod(operationName = "SetIntrinsics", action = "http://www.nortel.com/soa/oi/cct/ContactService/SetIntrinsics")
    public void setIntrinsics(
        @WebParam(partName = "parameters", name = "SetIntrinsicsRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.SetIntrinsicsRequest parameters
    ) throws SetIntrinsicsException, SessionNotCreatedException;

    @WebResult(name = "GetLastRedirectedAddressResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService", partName = "response")
    @WebMethod(operationName = "GetLastRedirectedAddress", action = "http://www.nortel.com/soa/oi/cct/ContactService/GetLastRedirectedAddress")
    public com.nortel.soa.oi.cct.types.contactservice.AddressResponse getLastRedirectedAddress(
        @WebParam(partName = "parameters", name = "GetLastRedirectedAddressRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/ContactService")
        com.nortel.soa.oi.cct.types.contactservice.ContactRequest parameters
    ) throws GetLastRedirectedAddressException, SessionNotCreatedException;
}
