package com.nortel.soa.oi.cct.addressservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2014-01-31T11:01:12+03:00
 * Generated source version: 2.6.1
 * 
 */
@WebService(targetNamespace = "http://www.nortel.com/soa/oi/cct/AddressService", name = "AddressService")
@XmlSeeAlso({com.nortel.soa.oi.cct.types.addressservice.ObjectFactory.class, com.nortel.soa.oi.cct.faults.ObjectFactory.class, com.nortel.soa.oi.cct.types.ObjectFactory.class, org.xmlsoap.schemas.ws._2003._03.addressing.ObjectFactory.class, org.oasis_open.docs.wsrf._2004._06.wsrf_ws_basefaults_1_2_draft_01.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface AddressService {

    @WebResult(name = "GetDoNotDisturbResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetDoNotDisturb", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetDoNotDisturb")
    public com.nortel.soa.oi.cct.types.addressservice.GetDoNotDisturbResponse getDoNotDisturb(
        @WebParam(partName = "parameters", name = "GetDoNotDisturbRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetDoNotDisturbException, SessionNotCreatedException;

    @WebResult(name = "GetCapabilitiesResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetCapabilities", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetCapabilities")
    public com.nortel.soa.oi.cct.types.addressservice.GetAddressCapabilitiesResponse getCapabilities(
        @WebParam(partName = "parameters", name = "GetCapabilitiesRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetCapabilitiesException, SessionNotCreatedException;

    @WebResult(name = "OriginateResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "Originate", action = "http://www.nortel.com/soa/oi/cct/AddressService/Originate")
    public com.nortel.soa.oi.cct.types.addressservice.ContactResponse originate(
        @WebParam(partName = "parameters", name = "OriginateRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressOriginateRequest parameters
    ) throws OriginateException, SessionNotCreatedException;

    @WebMethod(operationName = "SetDoNotDisturb", action = "http://www.nortel.com/soa/oi/cct/AddressService/SetDoNotDisturb")
    public void setDoNotDisturb(
        @WebParam(partName = "parameters", name = "SetDoNotDisturbRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.SetDoNotDisturbRequest parameters
    ) throws SessionNotCreatedException, SetDoNotDisturbException;

    @WebResult(name = "IsForwardedResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "IsForwarded", action = "http://www.nortel.com/soa/oi/cct/AddressService/IsForwarded")
    public com.nortel.soa.oi.cct.types.addressservice.IsForwardedResponse isForwarded(
        @WebParam(partName = "parameters", name = "IsForwardedRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws IsForwardedException, SessionNotCreatedException;

    @WebMethod(operationName = "SetForwarding", action = "http://www.nortel.com/soa/oi/cct/AddressService/SetForwarding")
    public void setForwarding(
        @WebParam(partName = "parameters", name = "SetForwardingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.SetForwardingRequest parameters
    ) throws SetForwardingException, SessionNotCreatedException;

    @WebMethod(operationName = "CancelForwarding", action = "http://www.nortel.com/soa/oi/cct/AddressService/CancelForwarding")
    public void cancelForwarding(
        @WebParam(partName = "parameters", name = "CancelForwardingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws SessionNotCreatedException, CancelForwardingException;

    @WebResult(name = "GetStateResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetState", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetState")
    public com.nortel.soa.oi.cct.types.addressservice.GetStateResponse getState(
        @WebParam(partName = "parameters", name = "GetStateRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetStateException, SessionNotCreatedException;

    @WebResult(name = "GetTerminalsResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetTerminals", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetTerminals")
    public com.nortel.soa.oi.cct.types.addressservice.GetTerminalsResponse getTerminals(
        @WebParam(partName = "parameters", name = "GetTerminalsRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetTerminalsException, SessionNotCreatedException;

    @WebResult(name = "GetPresenceResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetPresence", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetPresence")
    public com.nortel.soa.oi.cct.types.addressservice.GetPresenceResponse getPresence(
        @WebParam(partName = "parameters", name = "GetPresenceRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetPresenceException, SessionNotCreatedException;

    @WebResult(name = "GetConnectionResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetConnection", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetConnection")
    public com.nortel.soa.oi.cct.types.addressservice.ConnectionResponse getConnection(
        @WebParam(partName = "parameters", name = "GetConnectionRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.ConnectionRequest parameters
    ) throws GetConnectionException, SessionNotCreatedException;

    @WebResult(name = "GetMessageWaitingResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetMessageWaiting", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetMessageWaiting")
    public com.nortel.soa.oi.cct.types.addressservice.GetMessageWaitingResponse getMessageWaiting(
        @WebParam(partName = "parameters", name = "GetMessageWaitingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetMessageWaitingException, SessionNotCreatedException;

    @WebResult(name = "GetTerminalStatusResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetTerminalStatus", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetTerminalStatus")
    public com.nortel.soa.oi.cct.types.addressservice.GetTerminalStatusResponse getTerminalStatus(
        @WebParam(partName = "parameters", name = "GetTerminalStatusRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws SessionNotCreatedException, GetTerminalStatusException;

    @WebMethod(operationName = "PresenceSubscribe", action = "http://www.nortel.com/soa/oi/cct/AddressService/PresenceSubscribe")
    public void presenceSubscribe(
        @WebParam(partName = "parameters", name = "PresenceSubscribeRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.PresenceSubscribeRequest parameters
    ) throws PresenceSubscribeException, SessionNotCreatedException;

    @WebResult(name = "GetConnectionsResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetConnections", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetConnections")
    public com.nortel.soa.oi.cct.types.addressservice.GetConnectionsResponse getConnections(
        @WebParam(partName = "parameters", name = "GetConnectionsRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws SessionNotCreatedException, GetConnectionsException;

    @WebResult(name = "GetVersionResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetVersion", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetVersion")
    public com.nortel.soa.oi.cct.types.GetVersionResponse getVersion(
        @WebParam(partName = "parameters", name = "GetVersionRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.GetVersionRequest parameters
    ) throws GetVersionException, SessionNotCreatedException;

    @WebMethod(operationName = "SendInstantMessage", action = "http://www.nortel.com/soa/oi/cct/AddressService/SendInstantMessage")
    public void sendInstantMessage(
        @WebParam(partName = "parameters", name = "SendInstantMessage", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.InstantMessageRequest parameters
    ) throws SessionNotCreatedException, SendInstantMessageException;

    @WebResult(name = "GetUriResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetUri", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetUri")
    public com.nortel.soa.oi.cct.types.addressservice.GetUriResponse getUri(
        @WebParam(partName = "parameters", name = "GetUriRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws GetUriException, SessionNotCreatedException;

    @WebResult(name = "GetForwardingResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "GetForwarding", action = "http://www.nortel.com/soa/oi/cct/AddressService/GetForwarding")
    public com.nortel.soa.oi.cct.types.addressservice.GetForwardingResponse getForwarding(
        @WebParam(partName = "parameters", name = "GetForwardingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws SessionNotCreatedException, GetForwardingException;

    @WebMethod(operationName = "PresenceUnsubscribe", action = "http://www.nortel.com/soa/oi/cct/AddressService/PresenceUnsubscribe")
    public void presenceUnsubscribe(
        @WebParam(partName = "parameters", name = "PresenceUnsubscribeRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws PresenceUnsubscribeException, SessionNotCreatedException;

    @WebMethod(operationName = "SetMessageWaiting", action = "http://www.nortel.com/soa/oi/cct/AddressService/SetMessageWaiting")
    public void setMessageWaiting(
        @WebParam(partName = "parameters", name = "SetMessageWaitingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.SetMessageWaitingRequest parameters
    ) throws SetMessageWaitingException, SessionNotCreatedException;

    @WebResult(name = "IsMessageWaitingResponse", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService", partName = "response")
    @WebMethod(operationName = "IsMessageWaiting", action = "http://www.nortel.com/soa/oi/cct/AddressService/IsMessageWaiting")
    public com.nortel.soa.oi.cct.types.addressservice.IsMessageWaitingResponse isMessageWaiting(
        @WebParam(partName = "parameters", name = "IsMessageWaitingRequest", targetNamespace = "http://www.nortel.com/soa/oi/cct/types/AddressService")
        com.nortel.soa.oi.cct.types.addressservice.AddressRequest parameters
    ) throws IsMessageWaitingException, SessionNotCreatedException;
}
